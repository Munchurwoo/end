<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="join.us.GoodJob.model.mapper.CompanyMapper">
	<insert id="registerCompanyMember" parameterType="companyMemberVO">
		insert into
		company_member(company_id,introduction,company_type,industry,sales,date_of_establishment,num_of_employees)
		values(#{id}, #{introduction}, #{companyType}, #{industry}, #{sales}, #{dateOfEstablishment}, #{numOfEmployees})
	</insert>
	<insert id="registerMember" parameterType="companyMemberVO">
		insert into
		member(id,password,email,name,tel,member_type,address)
		values(#{id}, #{password}, #{email}, #{name}, #{tel}, 3, #{address})
	</insert>
	<select id="selectCompanyMember" parameterType="string" resultType="companyMemberVO">
		select m.id, m.email, m.name, m.address, m.tel, cm.introduction, cm.company_type, cm.industry, cm.sales, cm.date_of_establishment, cm.num_of_employees
		from company_member cm, member m
		where m.id=cm.company_id and m.id=#{value}
	</select>
	<update id="updateCompanyMember" parameterType="companyMemberVO">
		update company_member set introduction=#{introduction}, company_type=#{companyType}, industry=#{industry}, sales=#{sales}, date_of_establishment=#{dateOfEstablishment}, num_of_employees=#{numOfEmployees}
		where company_id=#{id}
	</update>
	<update id="updateMember" parameterType="companyMemberVO">
		update member set password=#{password}, email=#{email}, address=#{address}, tel=#{tel} where id=#{id}
	</update>
	<select id="myPageCompanyMember" resultType="companyMemberVO" parameterType="memberVO">
		select
		cm.company_id,m.password,m.name,m.address,m.tel,m.email,cm.introduction,
		cm.company_type,cm.industry,cm.sales,cm.date_of_establishment,cm.num_of_employees
		from member m , company_member cm
		where m.id=cm.company_id
		and m.id=#{id}
	</select>
	<!-- 181018 MIRI 일반회원, 기업회원 회원탈퇴 공통으로 묶음 -->
	<!-- <delete id="deleteCompanyMember" parameterType="string">
		delete from member where id=#{id}
	</delete> -->

	<select id="getAllCompanyList" resultType="companyMemberVO" parameterType="pagingBean">	
		select company_id, name, introduction
		from(select row_number() over(order by cm.company_id) as rnum, cm.company_id, m.name, cm.introduction
		from member m , company_member cm
		where m.id=cm.company_id
		) where rnum between #{startRowNumber} and #{endRowNumber}		
	</select>
	
	<select id="getAllCompanyListCount" resultType="int">
		select count(*)
		from member m , company_member cm
		where m.id=cm.company_id
	</select>
	
	<select id="detailCompanyInfo" resultType="companyMemberVO" parameterType="memberVO">
		select
		cm.company_id,m.password,m.name,m.address,m.tel,m.email,cm.introduction,
		cm.company_type,cm.industry,cm.sales,cm.date_of_establishment,cm.num_of_employees
		from member m , company_member cm
		where m.id=cm.company_id
		and m.id=#{id}
	</select>
	
	<resultMap type="companyMemberVO" id="companyMemberVORM">
		<result column="job_posting_num" property="jobPostingVO.jobPostingNum"/>
		<result column="career_status" property="jobPostingVO.careerStatus"/>
		<result column="title" property="jobPostingVO.title"/>
		<result column="content" property="jobPostingVO.content"/>
	</resultMap>
	<select id="jobPostringDetail" parameterType="string" resultMap="companyMemberVORM">
	select 
	cm.company_id, cm.introduction, cm.company_type, cm.industry, cm.sales, cm.date_of_establishment, cm.num_of_employees,
	j.job_posting_num, j.career_status, j.title, j.content, m.address, m.tel, m.email , m.name
	from job_posting j , company_member cm, member m
	where j.company_id = cm.company_id and cm.company_id=m.id
	and j.job_posting_num=#{jobPostingNum}
	</select>
	
	
	<select id="companyJobPostingList" resultType="jobPostingVO" parameterType="companyMemberVO">
		select 
		cm.company_id, cm.introduction, cm.company_type, cm.industry, cm.sales, cm.date_of_establishment, cm.num_of_employees,
		j.company_id, j.job_posting_num, j.career_status, j.title, j.content 
		from company_member cm , job_posting j
		where j.company_id = cm.company_id
		and j.company_id=#{companyId}
	</select>
	
	<resultMap type="companyMemberVO" id="companyMemberVORM2">
		<result column="job_posting_num" property="jobPostingVO.jobPostingNum"/>
		<result column="career_status" property="jobPostingVO.careerStatus"/>
		<result column="title" property="jobPostingVO.title"/>
		<result column="content" property="jobPostingVO.content"/>
	</resultMap>
	<select id="getAllJobPostingList" resultMap="companyMemberVORM2">
		select 
	cm.company_id, cm.introduction, cm.company_type, cm.industry, cm.sales, cm.date_of_establishment, cm.num_of_employees,
	j.job_posting_num, j.career_status, j.title, j.content, m.address, m.tel, m.email , m.name
	from job_posting j , company_member cm, member m
	where j.company_id = cm.company_id and cm.company_id=m.id
	</select>
</mapper> 		
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















