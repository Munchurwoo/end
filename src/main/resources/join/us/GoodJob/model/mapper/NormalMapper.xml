<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="join.us.GoodJob.model.mapper.NormalMapper">
	<insert id="registerMember" parameterType="normalMemberVO">
		insert into
		member(id,password,email,name,tel,member_type,address)
		values(#{id},
		#{password}, #{email}, #{name}, #{tel}, 1, #{address})
	</insert>

	<!-- 181018 MIRI normal_member picture_path 삭제 -->
	<insert id="registerNormalMember" parameterType="normalMemberVO">
		insert into
		normal_member(normal_id,career_status,gender)
		values(#{id}, #{careerStatus}, #{gender})
	</insert>
	
	<!-- 181018 MIRI normal_member picture_path 삭제 -->
	<select id="selectNormalMember" parameterType="string" resultType="normalMemberVO">
		select m.id, m.password, m.email, m.name, m.address, m.tel,
		nm.gender, nm.career_status
		from normal_member nm, member m
		where nm.normal_id=m.id and m.id=#{value}
	</select>

	<update id="updateMember" parameterType="normalMemberVO">
		update member set
		password=#{password}, email=#{email}, address=#{address}, tel=#{tel}
		where id=#{id}
	</update>
<<<<<<< HEAD

	<update id="updateNormalMember" parameterType="normalMemberVO">
		update
		normal_member set picture_path=#{picturePath},
		career_status=#{careerStatus} where normal_id=#{id}
	</update>

	<delete id="deleteNormalMember" parameterType="string">
		delete from member
		where id=#{id}
	</delete>

	<select id="myPageNormalMember" resultType="normalMemberVO"
		parameterType="memberVO">
		select
		m.id,m.password,m.email,m.name,m.tel,m.address,m.member_type,nm.normal_id,nm.gender,nm.career_status
=======
	
	<!-- 181018 MIRI normal_member picture_path 삭제 -->
	<update id="updateNormalMember" parameterType="normalMemberVO">
		update normal_member set career_status=#{careerStatus} where normal_id=#{id}
	</update>
	
	<!-- 181018 MIRI 일반회원, 기업회원 회원탈퇴 공통으로 묶음  -->
	<!-- <delete id="deleteNormalMember" parameterType="string">
		delete from member where id=#{id}
	</delete> -->
	
	<!-- 181018 MIRI selectNormalMember와 중복되어 삭제 -->
	<!-- <select id="myPageNormalMember" resultType="normalMemberVO" parameterType="memberVO">
		select m.id,m.password,m.email,m.name,m.tel,m.address,m.member_type,nm.normal_id,nm.gender,nm.career_status
>>>>>>> branch 'master' of https://github.com/Munchurwoo/goodjob
		from member m,normal_member nm
		where m.id=nm.normal_id
		and m.id=#{id}
<<<<<<< HEAD
	</select>

=======
	</select> -->
	
>>>>>>> branch 'master' of https://github.com/Munchurwoo/goodjob
	<insert id="insertPortfolio" parameterType="portfolioVO">
		insert into
		portfolio(normal_id, title, content, picture_path)
		values(#{normalId},
		#{title}, #{content}, #{picturePath})
	</insert>

	<insert id="insertPortfolioFile" parameterType="map">
		insert into
		portfolio_file(file_num, normal_id, file_path)
		values(portfolio_file_seq.nextval, #{normalId}, #{filePath})
	</insert>

	<insert id="insertPortfolioAcademic" parameterType="map">
		insert into
		portfolio_academic(normal_id, academic_num)
		values(#{normalId},
		#{academicNum})
	</insert>

	<insert id="insertPortfolioDev" parameterType="map">
		insert into
		portfolio_dev(normal_id, dev_cat_num)
		values(#{normalId}, #{devCatNum})
	</insert>

	<insert id="insertPortfolioEmp" parameterType="map">
		insert into
		portfolio_emp(normal_id, emp_type_num)
		values(#{normalId},
		#{empTypeNum})
	</insert>

	<insert id="insertPortfolioLoc" parameterType="map">
		insert into
		portfolio_loc(normal_id, loc_num)
		values(#{normalId}, #{locNum})
	</insert>

	<insert id="insertPortfolioRecuitment" parameterType="map">
		insert into
		portfolio_recruitment(normal_id, rc_num)
		values(#{normalId}, #{rcNum})
	</insert>
<<<<<<< HEAD

	<select id="normalDetailPortfolio" resultType="portfolioVO"
		parameterType="string">
		select title,content
		from portfolio
		where
		normal_id=#{normalId}
=======
	
	<!-- 181018 MIRI normalId->value로 수정 -->
	<select id="normalDetailPortfolio" resultType="portfolioVO" parameterType="string">
		select title,content from portfolio where normal_id=#{value}
>>>>>>> branch 'master' of https://github.com/Munchurwoo/goodjob
	</select>
	<select id="getAllPortfolioList" resultType="portfolioVO">

	</select>

	<select id="AllFindNomarMember" resultType="normalMemberVO">
		select m.id,m.password,m.email,m.name,m.tel,m.address,m.member_type,nm.normal_id,nm.gender,nm.career_status
		from member m, normal_member nm
		where m.id=nm.normal_id
	</select>
<<<<<<< HEAD

=======
	
	<select id="portFolioVOById" resultType="PortfolioVO" parameterType="String" >
		select * 
		from portfolio
		where id=${id}
	</select>
	<delete id="deletePortfolio" parameterType="string">
		delete from portfolio where normal_id=#{value}
	</delete>
	
>>>>>>> branch 'master' of https://github.com/Munchurwoo/goodjob
</mapper>
